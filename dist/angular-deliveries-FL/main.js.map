{"version":3,"sources":["./src/environments/environment.ts","./src/app/deliveries/deliveries.component.ts","./src/app/deliveries/deliveries.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/utils/supplier-filter.pipe.ts","./src/app/app.module.ts","./src/app/change-color.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Delivery } from '../utils/delivery';\n\n@Component({\n  selector: 'app-deliveries',\n  templateUrl: './deliveries.component.html',\n  styleUrls: ['./deliveries.component.scss']\n})\nexport class DeliveriesComponent implements OnInit {\n\n  table: Delivery[] = [];\n  filterArgs = {Dock_Lang: 'Citrus'};\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  handleFileSelect(e): any {\n    const elem = document.documentElement;\n    elem.requestFullscreen();\n    this.table = [...this.table];\n    let files = null;\n    files = e.target.files; // filelist object\n    const file = files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (event: any) => {\n      const csv = event.target.result; // content of csv file\n      this.parseCsv(csv);\n    };\n  }\n\n  parseCsv(csv): void {\n    const tableData = [];\n    const rows = csv.split(/\\n|\\r\\n/); // split into rows\n    const headers = rows.shift() // get headers\n      .split(' ')\n      .join('_') // get rid of spaces in headers\n      .split(','); // split headers\n    for (let i = 0; i < rows.length; i++) {\n      const dataWithComma = rows[i] // get data rows\n        .replace(/\\\".*?\\\"/g, match => match.replace(/,/g, ';')) // get rid of double quoted comma\n        .split(','); // split data rows\n      const dataRows = tableData[i] = {};\n      for (let j = 0; j < dataWithComma.length; j++) {\n        const dataVal = dataWithComma[j]\n          .replace(/;/g, ',') // get comma back\n          .replace(/\\\"/g, ''); // get rid of double quotes\n        const dataHead = headers[j]; // index headers\n        dataRows[dataHead] = dataVal; // make key:value pairs\n      }\n    }\n    this.table = [...tableData];\n    this.table.pop(); // delete blank row at bottom??\n    console.log('parseCSV complete: ', this.table);\n  }\n}\n\n","<div id=\"fullScreen\">\n  <form>\n    <div class=\"custom-file mb-3\">\n      <input #fileInput\n            class=\"custom-file-input\"\n            id=\"validatedCustomFile\"\n            type=\"file\"\n            accept=\".csv\"\n            (click)=\"fileInput.value = null\"\n            value=\"\"\n            (change)=\"handleFileSelect($event)\"\n            required/>\n      <label class=\"custom-file-label\"\n            data-browse=\"Bestand kiezen\"\n            for=\"validatedCustomFile\">Een csv-bestand kiezen...</label>\n    </div>\n  </form>\n\n  <div *ngIf=\"table && table.length\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Ordernummer</th>\n          <th scope=\"col\">Crediteur</th>\n          <th scope=\"col\">Dock lang</th>\n          <th scope=\"col\">Referentie</th>\n          <th scope=\"col\">Ingebracht door</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let cel of table | supplierFilter:filterArgs\" appChangeColor>\n          <td>{{cel.OrderNummer}}</td>\n          <td>{{cel.Crediteur}}</td>\n          <td>{{cel.Dock_Lang}}</td>\n          <td>{{cel.Referentie}}</td>\n          <td>{{cel.Ingebracht_door}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Leveringen Fruity Line BV';\n}\n","<div class=\"container-fluid\">\n  <h1>{{title}}</h1>\n  <app-deliveries></app-deliveries>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Delivery } from '../utils/delivery';\n\n@Pipe({\n  name: 'supplierFilter',\n})\nexport class SupplierFilterPipe implements PipeTransform {\n\n  transform(table: any[], filter: any): any {\n    if (!table || !filter) {\n      return table;\n    }\n    // filter items array, items which match and return true will be filtered out, false will be kept\n    return table.filter(cel => cel.Dock_Lang.indexOf(filter.Dock_Lang) === -1);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { DeliveriesComponent } from './deliveries/deliveries.component';\nimport { ChangeColorDirective } from './change-color.directive';\nimport { SupplierFilterPipe } from './utils/supplier-filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DeliveriesComponent,\n    ChangeColorDirective,\n    SupplierFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, HostBinding, Input, HostListener } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appChangeColor]'\n})\nexport class ChangeColorDirective {\n\n  private toggle = 0;\n  @Input() color1 = 'rgb(50, 168, 82)';\n  @Input() color2 = 'rgb(255, 0, 0)';\n\n  constructor(private doms: DomSanitizer) { }\n\n  @HostBinding('style') get myStyle(): SafeStyle {\n    if (this.toggle === 0) {\n      const style = '';\n      return this.doms.bypassSecurityTrustStyle(style);\n    } else if (this.toggle === 1) {\n      const style = `background: ${this.color1}`;\n      return this.doms.bypassSecurityTrustStyle(style);\n    } else {\n      const style = `background: ${this.color2}`;\n      return this.doms.bypassSecurityTrustStyle(style);\n    }\n  }\n\n  @HostListener('click') onClick(): void {\n    if (this.toggle < 2) {\n      this.toggle += 1;\n    } else {\n      this.toggle = 0;\n    }\n\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}